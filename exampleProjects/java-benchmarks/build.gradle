// Execute with ./gradlew jar; ./gradlew -p exampleProjects/java-benchmarks/

buildscript {

    repositories {
        jcenter()
        flatDir {
            dirs file('../../build/libs').absolutePath
        }
    }
    dependencies {
        classpath 'io.morethan:gradle-jmh-report:'
        
        //transitive dependencies since we grep the plugin from build/libs
        classpath(group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.0.1-2')
        classpath(group: 'org.jetbrains.kotlinx', name: 'kotlinx.html.jvm', version: '0.5.10') 
        classpath(group: 'com.beust', name: 'klaxon', version: '0.24')
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'io.morethan.jmhreport'

apply from: rootProject.file('../jmh.gradle')

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    jcenter()
}

dependencies {
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.3.0'
}

eclipse {
    jdt.file.withProperties {
        it['org.eclipse.jdt.core.formatter.lineSplit'] = '200'
        it['org.eclipse.jdt.core.formatter.comment.line_length'] = '120'
        it['org.eclipse.jdt.core.formatter.tabulation.char'] = 'space'
        it['org.eclipse.jdt.core.formatter.tabulation.size'] = '4'
        it['org.eclipse.jdt.core.formatter.join_wrapped_lines'] = 'false'
        it['org.eclipse.jdt.core.compiler.problem.missingOverrideAnnotation'] = 'warning'
    }
}

jmhReport {
    jmhResultPath = project.file('build/reports/jmh/result.json')
    jmhReportOutput = project.file('build/reports/jmh')
}

tasks.jmh.finalizedBy tasks.jmhReport 

